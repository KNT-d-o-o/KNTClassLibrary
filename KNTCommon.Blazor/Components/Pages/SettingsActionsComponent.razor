@inject HelperService Helper
@inject WindowsServiceHelper WHelper
@inject DialogService DialogService
@inject KNTCommon.Business.Scripts.PowerShellHelper PSHelper

@* SettingsActionsComponent *@

<div class="ScrollableOuterDiv Animation">

    <RadzenCard>
        <RadzenLabel Text="PLC service status: " />
        <b>@ServiceStatus</b>

        <RadzenButton Text="Refresh" Click="RefreshStatus" class="MenuIcons rz-ripple action-button" Style="margin-left: 10px;" Size="ButtonSize.Large"/>
        <RadzenButton Text="Start" Click="StartService" class="MenuIcons rz-ripple action-button" Style="margin-left: 10px;" Size="ButtonSize.Large" Disabled="@IsRunning" />
        <RadzenButton Text="Stop" Click="StopService" class="MenuIcons rz-ripple action-button" Style="margin-left: 10px;" Size="ButtonSize.Large" Disabled="@(IsRunning == false)" />
        <RadzenButton Text="Restart" Click="RestartService" class="MenuIcons rz-ripple action-button" Style="margin-left: 10px;" Size="ButtonSize.Large" Disabled="@(IsRunning == false)" />
    </RadzenCard>

</div>

@code {

    const string NONE = "None";
    private string ServiceStatus = NONE;
    private const string ServiceName = "KNTLeakTester.BusinessPLC_1"; // fstaa premakni v app

    private bool IsRunning => ServiceStatus == "Running" || ServiceStatus == "Paused";

    protected override async Task OnInitializedAsync()
    {
        await RefreshStatus();
    }

    private async Task RefreshStatus()
    {
        ServiceStatus = await Task.Run(() => WHelper.GetServiceStatus(ServiceName));
    }

    private async Task StartService()
    {
        ServiceStatus = NONE;
        if (await Task.Run(() => PSHelper.StartStopService(ServiceName, "start")))
        { 
            await RefreshStatus();
        }
    }

    private async Task StopService()
    {
        ServiceStatus = NONE;
        if (await Task.Run(() => PSHelper.StartStopService(ServiceName, "stop")))
        { 
            await RefreshStatus();
        }
    }
    
    private async Task RestartService()
    {
        ServiceStatus = NONE;
        if (await Task.Run(() => PSHelper.StartStopService(ServiceName, "restart")))
        {
            await RefreshStatus();
        }
    }
    
}
