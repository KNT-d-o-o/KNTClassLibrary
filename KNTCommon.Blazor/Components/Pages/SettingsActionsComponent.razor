@inject HelperService Helper
@inject DialogService DialogService

@* SettingsActionsComponent *@

<div class="ScrollableOuterDiv Animation">
    <RadzenButton Click='() => RestartServer(true)' Icon="restart_alt" class="MenuIcons rz-ripple" Size="ButtonSize.Large" ButtonStyle="ButtonStyle.Light" Variant="Variant.Outlined" title="Restart system"></RadzenButton>

    <RadzenButton Click='() => RestartServer(false)' Icon="highlight_off" class="MenuIcons rz-ripple" Size="ButtonSize.Large" ButtonStyle="ButtonStyle.Light" Variant="Variant.Outlined" title="Stop system"></RadzenButton>
</div>

@code {

    private async void RestartServer(bool start)
    {
        string msg = " system";
        if (start)
            msg = "Restart" + msg;
        else
            msg = "Stop" + msg;

        var result = await DialogService.OpenAsync<ConfirmationDialog>
        ("", Helper.CreateDialogBlazorComponentParameters("action", msg, "weight", 2),
        Helper.GetDialogOptions("ConfirmationWrapper"));
        if (result == true)
            PowerShellHelper.ExecuteRestartScript(start);
    }

}
